package healthmonitoring

import com.ftn.sbnz.model.models.Environment
import com.ftn.sbnz.model.models.Vitals
import com.ftn.sbnz.model.models.CrewSymptoms
import com.ftn.sbnz.model.models.VentilationStatus
import com.ftn.sbnz.model.models.Finding

global java.util.List findings

//HYPOXIA DETECTION RULES

// Rule 1: Risk of hypoxia
rule "Risk of hypoxia"
when
    Environment( o2Level < 19.5 ) 
    or Environment( co2Level > 1000 )
    not Finding( type == "Risk of hypoxia" )
then
    insert( new Finding("Risk of hypoxia") );
end

// Rule 2: Hypoxia confirmed
rule "Hypoxia confirmed"
when
    Finding( type == "Risk of hypoxia" )
    and (
        Vitals( spo2 < 90 )
        or CrewSymptoms( shortnessOfBreath == true )
        or CrewSymptoms( dizziness == true )
    )
    not Finding( type == "Hypoxia confirmed" )
then
    insert( new Finding("Hypoxia confirmed") );
end

// Rule 3: Cause is poor ventilation
rule "Cause of hypoxia: ventilation degraded"
when
    Finding( type == "Hypoxia confirmed" )
    and VentilationStatus( degraded == true )
    not Finding( type == "Cause of hypoxia: poor ventilation" )
then
    insert( new Finding("Cause of hypoxia: poor ventilation") );
end

// === CHEMICAL AIR QUALITY RULES ===

// Rule 4: Chemical irritants present
rule "Chemical irritants present"
when
    Environment( coLevel > 35 )  // CO elevated (35 ppm is NIOSH 8-hour limit)
    and CrewSymptoms( eyeIrritation == true )
    not Finding( type == "Chemical irritants present" )
then
    insert( new Finding("Chemical irritants present") );
end

// Rule 5: Dangerous air quality in module
rule "Dangerous air quality in module"
when
    Finding( type == "Chemical irritants present" )
    and VentilationStatus( degraded == true )
    not Finding( type == "Dangerous air quality in module" )
then
    insert( new Finding("Dangerous air quality in module") );
end
