package healthmonitoring

import com.ftn.sbnz.model.models.Environment
import com.ftn.sbnz.model.models.Vitals
import com.ftn.sbnz.model.models.CrewSymptoms
import com.ftn.sbnz.model.models.VentilationStatus
import com.ftn.sbnz.model.models.Finding
import com.ftn.sbnz.service.services.NotificationService
import com.ftn.sbnz.service.services.FindingsService

global NotificationService notificationService
global FindingsService findingsService

//HYPOXIA DETECTION RULES

// Rule 1: Risk of hypoxia
rule "Risk of hypoxia"
when
    eval(!findingsService.hasActiveFinding($moduleId, "Risk of hypoxia"))
    $env: Environment( o2Level < 19.5 || co2Level > 1000, $moduleId : moduleID )
then
    Finding finding = new Finding("Risk of hypoxia", $moduleId, 
        "Environmental risk detected in module " + $moduleId, "HIGH");
    insert(finding);
end

// Rule 2: Hypoxia confirmed
rule "Hypoxia confirmed"
when
    eval(!findingsService.hasActiveFinding($moduleId, "Hypoxia confirmed"))
    Finding( type == "Risk of hypoxia", $moduleId : moduleId )
    and (
        Vitals( moduleId == $moduleId, spo2 < 90 )
        or CrewSymptoms( moduleId == $moduleId, shortnessOfBreath == true )
        or CrewSymptoms( moduleId == $moduleId, dizziness == true )
    )
then
    Finding finding = new Finding("Hypoxia confirmed", $moduleId,
        "Hypoxia confirmed with symptoms in module " + $moduleId, "CRITICAL");
    insert(finding);
end

// Rule 3: Cause is poor ventilation
rule "Cause of hypoxia: ventilation degraded"
when
    eval(!findingsService.hasActiveFinding($moduleId, "Cause of hypoxia: poor ventilation"))
    Finding( type == "Hypoxia confirmed", $moduleId : moduleId )
    VentilationStatus( moduleID == $moduleId, degraded == true )
then
    Finding finding = new Finding("Cause of hypoxia: poor ventilation", $moduleId,
        "Poor ventilation causing hypoxia in module " + $moduleId, "HIGH");
    insert(finding);
end

// === CHEMICAL AIR QUALITY RULES ===

// Rule 4: Chemical irritants present
rule "Chemical irritants present"
when
    eval(!findingsService.hasActiveFinding($moduleId, "Chemical irritants present"))
    $env: Environment( coLevel > 35, $moduleId : moduleID )  // CO elevated (35 ppm is NIOSH 8-hour limit)
    CrewSymptoms( moduleId == $moduleId, eyeIrritation == true )
then
    Finding finding = new Finding("Chemical irritants present", $moduleId,
        "Chemical irritants detected in module " + $moduleId, "MEDIUM");
    insert(finding);
end

// Rule 5: Dangerous air quality in module
rule "Dangerous air quality in module"
when
    eval(!findingsService.hasActiveFinding($moduleId, "Dangerous air quality in module"))
    Finding( type == "Chemical irritants present", $moduleId : moduleId )
    VentilationStatus( moduleID == $moduleId, degraded == true )
then
    Finding finding = new Finding("Dangerous air quality in module", $moduleId,
        "Dangerous air quality detected in module " + $moduleId, "HIGH");
    insert(finding);
end

rule "Send notification for new findings"
    salience 500
when
    $finding : Finding( notified == false )
then
    notificationService.sendNotification($finding.getType(), "HEALTH_MONITORING", 
        $finding.getDetails(), $finding.getPriority());
    modify($finding) { setNotified(true) }
end

rule "Persist findings to global store"
    salience 400
when
    $finding : Finding( notified == true, $moduleId : moduleId )
then
    findingsService.addFindings($moduleId, java.util.Arrays.asList($finding));
end
